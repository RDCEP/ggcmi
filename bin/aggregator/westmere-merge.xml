<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.ci.uchicago.edu/swift/SwiftSites">
  <pool handle="midway">
    <execution provider="coaster" jobmanager="local:slurm" url="localhost:1"/> <!-- Scheduler to use -->
    <profile namespace="globus" key="jobsPerNode">1</profile>                 <!-- Maximum number of RunpSIMS.sh tasks per node -->
    <profile namespace="globus" key="maxTime">86400</profile>                  <!-- Maximum time, in seconds of a coaster block -->
    <profile namespace="globus" key="maxwalltime">06:00:00</profile>           <!-- Maximum time, in hh:mm:ss of any one RunpSIMS.sh app call -->
    <profile namespace="globus" key="queue">westmere</profile>                 <!-- Slurm partition to use -->
    <profile namespace="globus" key="slots">24</profile>                       <!-- Maximum number of Slurm jobs -->
    <profile namespace="globus" key="nodeGranularity">1</profile>              <!-- Request nodes in blocks of nodeGranularity -->
    <profile namespace="globus" key="maxNodes">1</profile>                     <!-- Maximum number of nodes per Slurm job -->
    <profile namespace="karajan" key="jobThrottle">15.36</profile>             <!-- Multiply this number by 100 to get the total number of active jobs before Swift starts throttling -->
    <profile namespace="globus" key="slurm.exclusive">true</profile>           <!-- When set to false, it's easier to get nodes, but things may run slower -->
    <profile namespace="karajan" key="initialScore">10000</profile>            <!-- Set to a high value to start jobs immediately -->
    <profile namespace="globus" key="project">pi-joshuaelliott</profile>       <!-- Project to charge -->
    <profile namespace="globus" key="highOverAllocation">100</profile>         <!-- Always keep these at 100 -->
    <profile namespace="globus" key="lowOverAllocation">100</profile>          <!-- Always keep these at 100 -->
    <filesystem provider="local"/>					       <!-- Use local filesytem -->
    <workdirectory>/scratch/midway/{env.USER}/ggcmi.work</workdirectory>          <!-- Work directory for staging in files -->
    <scratch>/scratch/local/{env.USER}/ggcmi.work</scratch>                    <!-- Scratch directory where tasks are run -->
  </pool>
</config>
